/*
Ghost API

The Ghost API

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the IssueCreateParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IssueCreateParams{}

// IssueCreateParams struct for IssueCreateParams
type IssueCreateParams struct {
	Category string `json:"category"`
	Description string `json:"description"`
	Name string `json:"name"`
	RemediationSteps string `json:"remediation_steps"`
	ReproductionSteps *string `json:"reproduction_steps,omitempty"`
	ResourceKind string `json:"resource_kind"`
	Severity string `json:"severity"`
}

type _IssueCreateParams IssueCreateParams

// NewIssueCreateParams instantiates a new IssueCreateParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIssueCreateParams(category string, description string, name string, remediationSteps string, resourceKind string, severity string) *IssueCreateParams {
	this := IssueCreateParams{}
	this.Category = category
	this.Description = description
	this.Name = name
	this.RemediationSteps = remediationSteps
	this.ResourceKind = resourceKind
	this.Severity = severity
	return &this
}

// NewIssueCreateParamsWithDefaults instantiates a new IssueCreateParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIssueCreateParamsWithDefaults() *IssueCreateParams {
	this := IssueCreateParams{}
	return &this
}

// GetCategory returns the Category field value
func (o *IssueCreateParams) GetCategory() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Category
}

// GetCategoryOk returns a tuple with the Category field value
// and a boolean to check if the value has been set.
func (o *IssueCreateParams) GetCategoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Category, true
}

// SetCategory sets field value
func (o *IssueCreateParams) SetCategory(v string) {
	o.Category = v
}

// GetDescription returns the Description field value
func (o *IssueCreateParams) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *IssueCreateParams) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *IssueCreateParams) SetDescription(v string) {
	o.Description = v
}

// GetName returns the Name field value
func (o *IssueCreateParams) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *IssueCreateParams) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *IssueCreateParams) SetName(v string) {
	o.Name = v
}

// GetRemediationSteps returns the RemediationSteps field value
func (o *IssueCreateParams) GetRemediationSteps() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RemediationSteps
}

// GetRemediationStepsOk returns a tuple with the RemediationSteps field value
// and a boolean to check if the value has been set.
func (o *IssueCreateParams) GetRemediationStepsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RemediationSteps, true
}

// SetRemediationSteps sets field value
func (o *IssueCreateParams) SetRemediationSteps(v string) {
	o.RemediationSteps = v
}

// GetReproductionSteps returns the ReproductionSteps field value if set, zero value otherwise.
func (o *IssueCreateParams) GetReproductionSteps() string {
	if o == nil || IsNil(o.ReproductionSteps) {
		var ret string
		return ret
	}
	return *o.ReproductionSteps
}

// GetReproductionStepsOk returns a tuple with the ReproductionSteps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IssueCreateParams) GetReproductionStepsOk() (*string, bool) {
	if o == nil || IsNil(o.ReproductionSteps) {
		return nil, false
	}
	return o.ReproductionSteps, true
}

// HasReproductionSteps returns a boolean if a field has been set.
func (o *IssueCreateParams) HasReproductionSteps() bool {
	if o != nil && !IsNil(o.ReproductionSteps) {
		return true
	}

	return false
}

// SetReproductionSteps gets a reference to the given string and assigns it to the ReproductionSteps field.
func (o *IssueCreateParams) SetReproductionSteps(v string) {
	o.ReproductionSteps = &v
}

// GetResourceKind returns the ResourceKind field value
func (o *IssueCreateParams) GetResourceKind() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceKind
}

// GetResourceKindOk returns a tuple with the ResourceKind field value
// and a boolean to check if the value has been set.
func (o *IssueCreateParams) GetResourceKindOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceKind, true
}

// SetResourceKind sets field value
func (o *IssueCreateParams) SetResourceKind(v string) {
	o.ResourceKind = v
}

// GetSeverity returns the Severity field value
func (o *IssueCreateParams) GetSeverity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value
// and a boolean to check if the value has been set.
func (o *IssueCreateParams) GetSeverityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Severity, true
}

// SetSeverity sets field value
func (o *IssueCreateParams) SetSeverity(v string) {
	o.Severity = v
}

func (o IssueCreateParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IssueCreateParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["category"] = o.Category
	toSerialize["description"] = o.Description
	toSerialize["name"] = o.Name
	toSerialize["remediation_steps"] = o.RemediationSteps
	if !IsNil(o.ReproductionSteps) {
		toSerialize["reproduction_steps"] = o.ReproductionSteps
	}
	toSerialize["resource_kind"] = o.ResourceKind
	toSerialize["severity"] = o.Severity
	return toSerialize, nil
}

func (o *IssueCreateParams) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"category",
		"description",
		"name",
		"remediation_steps",
		"resource_kind",
		"severity",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varIssueCreateParams := _IssueCreateParams{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varIssueCreateParams)

	if err != nil {
		return err
	}

	*o = IssueCreateParams(varIssueCreateParams)

	return err
}

type NullableIssueCreateParams struct {
	value *IssueCreateParams
	isSet bool
}

func (v NullableIssueCreateParams) Get() *IssueCreateParams {
	return v.value
}

func (v *NullableIssueCreateParams) Set(val *IssueCreateParams) {
	v.value = val
	v.isSet = true
}

func (v NullableIssueCreateParams) IsSet() bool {
	return v.isSet
}

func (v *NullableIssueCreateParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIssueCreateParams(val *IssueCreateParams) *NullableIssueCreateParams {
	return &NullableIssueCreateParams{value: val, isSet: true}
}

func (v NullableIssueCreateParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIssueCreateParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


