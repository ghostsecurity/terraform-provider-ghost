/*
Ghost API

The Ghost API

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AppEndpoint type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppEndpoint{}

// AppEndpoint struct for AppEndpoint
type AppEndpoint struct {
	Endpoint Endpoint `json:"endpoint"`
	LastScannedAt string `json:"last_scanned_at"`
}

type _AppEndpoint AppEndpoint

// NewAppEndpoint instantiates a new AppEndpoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppEndpoint(endpoint Endpoint, lastScannedAt string) *AppEndpoint {
	this := AppEndpoint{}
	this.Endpoint = endpoint
	this.LastScannedAt = lastScannedAt
	return &this
}

// NewAppEndpointWithDefaults instantiates a new AppEndpoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppEndpointWithDefaults() *AppEndpoint {
	this := AppEndpoint{}
	return &this
}

// GetEndpoint returns the Endpoint field value
func (o *AppEndpoint) GetEndpoint() Endpoint {
	if o == nil {
		var ret Endpoint
		return ret
	}

	return o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value
// and a boolean to check if the value has been set.
func (o *AppEndpoint) GetEndpointOk() (*Endpoint, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Endpoint, true
}

// SetEndpoint sets field value
func (o *AppEndpoint) SetEndpoint(v Endpoint) {
	o.Endpoint = v
}

// GetLastScannedAt returns the LastScannedAt field value
func (o *AppEndpoint) GetLastScannedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastScannedAt
}

// GetLastScannedAtOk returns a tuple with the LastScannedAt field value
// and a boolean to check if the value has been set.
func (o *AppEndpoint) GetLastScannedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastScannedAt, true
}

// SetLastScannedAt sets field value
func (o *AppEndpoint) SetLastScannedAt(v string) {
	o.LastScannedAt = v
}

func (o AppEndpoint) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppEndpoint) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["endpoint"] = o.Endpoint
	toSerialize["last_scanned_at"] = o.LastScannedAt
	return toSerialize, nil
}

func (o *AppEndpoint) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"endpoint",
		"last_scanned_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAppEndpoint := _AppEndpoint{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAppEndpoint)

	if err != nil {
		return err
	}

	*o = AppEndpoint(varAppEndpoint)

	return err
}

type NullableAppEndpoint struct {
	value *AppEndpoint
	isSet bool
}

func (v NullableAppEndpoint) Get() *AppEndpoint {
	return v.value
}

func (v *NullableAppEndpoint) Set(val *AppEndpoint) {
	v.value = val
	v.isSet = true
}

func (v NullableAppEndpoint) IsSet() bool {
	return v.isSet
}

func (v *NullableAppEndpoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppEndpoint(val *AppEndpoint) *NullableAppEndpoint {
	return &NullableAppEndpoint{value: val, isSet: true}
}

func (v NullableAppEndpoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppEndpoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


