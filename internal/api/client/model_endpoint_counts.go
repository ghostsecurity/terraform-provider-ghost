/*
Ghost API

The Ghost API

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EndpointCounts type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EndpointCounts{}

// EndpointCounts struct for EndpointCounts
type EndpointCounts struct {
	Api EndpointCount `json:"api"`
	Html EndpointCount `json:"html"`
}

type _EndpointCounts EndpointCounts

// NewEndpointCounts instantiates a new EndpointCounts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEndpointCounts(api EndpointCount, html EndpointCount) *EndpointCounts {
	this := EndpointCounts{}
	this.Api = api
	this.Html = html
	return &this
}

// NewEndpointCountsWithDefaults instantiates a new EndpointCounts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEndpointCountsWithDefaults() *EndpointCounts {
	this := EndpointCounts{}
	return &this
}

// GetApi returns the Api field value
func (o *EndpointCounts) GetApi() EndpointCount {
	if o == nil {
		var ret EndpointCount
		return ret
	}

	return o.Api
}

// GetApiOk returns a tuple with the Api field value
// and a boolean to check if the value has been set.
func (o *EndpointCounts) GetApiOk() (*EndpointCount, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Api, true
}

// SetApi sets field value
func (o *EndpointCounts) SetApi(v EndpointCount) {
	o.Api = v
}

// GetHtml returns the Html field value
func (o *EndpointCounts) GetHtml() EndpointCount {
	if o == nil {
		var ret EndpointCount
		return ret
	}

	return o.Html
}

// GetHtmlOk returns a tuple with the Html field value
// and a boolean to check if the value has been set.
func (o *EndpointCounts) GetHtmlOk() (*EndpointCount, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Html, true
}

// SetHtml sets field value
func (o *EndpointCounts) SetHtml(v EndpointCount) {
	o.Html = v
}

func (o EndpointCounts) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EndpointCounts) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["api"] = o.Api
	toSerialize["html"] = o.Html
	return toSerialize, nil
}

func (o *EndpointCounts) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"api",
		"html",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEndpointCounts := _EndpointCounts{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEndpointCounts)

	if err != nil {
		return err
	}

	*o = EndpointCounts(varEndpointCounts)

	return err
}

type NullableEndpointCounts struct {
	value *EndpointCounts
	isSet bool
}

func (v NullableEndpointCounts) Get() *EndpointCounts {
	return v.value
}

func (v *NullableEndpointCounts) Set(val *EndpointCounts) {
	v.value = val
	v.isSet = true
}

func (v NullableEndpointCounts) IsSet() bool {
	return v.isSet
}

func (v *NullableEndpointCounts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEndpointCounts(val *EndpointCounts) *NullableEndpointCounts {
	return &NullableEndpointCounts{value: val, isSet: true}
}

func (v NullableEndpointCounts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEndpointCounts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


