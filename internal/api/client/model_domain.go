/*
Ghost API

The Ghost API

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the Domain type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Domain{}

// Domain struct for Domain
type Domain struct {
	CreatedAt string `json:"created_at"`
	// TODO: Deprecate this when clients are only using the DomainSummary field.
	DiscoveredHostCount int32 `json:"discovered_host_count"`
	DiscoveryStatus string `json:"discovery_status"`
	DomainSummary DomainSummary `json:"domain_summary"`
	Enabled bool `json:"enabled"`
	FirstParty bool `json:"first_party"`
	Id string `json:"id"`
	IsHealthy bool `json:"is_healthy"`
	IsSystemCreated bool `json:"is_system_created"`
	LastScannedAt string `json:"last_scanned_at"`
	Name string `json:"name"`
	UpdatedAt string `json:"updated_at"`
}

type _Domain Domain

// NewDomain instantiates a new Domain object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDomain(createdAt string, discoveredHostCount int32, discoveryStatus string, domainSummary DomainSummary, enabled bool, firstParty bool, id string, isHealthy bool, isSystemCreated bool, lastScannedAt string, name string, updatedAt string) *Domain {
	this := Domain{}
	this.CreatedAt = createdAt
	this.DiscoveredHostCount = discoveredHostCount
	this.DiscoveryStatus = discoveryStatus
	this.DomainSummary = domainSummary
	this.Enabled = enabled
	this.FirstParty = firstParty
	this.Id = id
	this.IsHealthy = isHealthy
	this.IsSystemCreated = isSystemCreated
	this.LastScannedAt = lastScannedAt
	this.Name = name
	this.UpdatedAt = updatedAt
	return &this
}

// NewDomainWithDefaults instantiates a new Domain object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDomainWithDefaults() *Domain {
	this := Domain{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *Domain) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Domain) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Domain) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetDiscoveredHostCount returns the DiscoveredHostCount field value
func (o *Domain) GetDiscoveredHostCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DiscoveredHostCount
}

// GetDiscoveredHostCountOk returns a tuple with the DiscoveredHostCount field value
// and a boolean to check if the value has been set.
func (o *Domain) GetDiscoveredHostCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DiscoveredHostCount, true
}

// SetDiscoveredHostCount sets field value
func (o *Domain) SetDiscoveredHostCount(v int32) {
	o.DiscoveredHostCount = v
}

// GetDiscoveryStatus returns the DiscoveryStatus field value
func (o *Domain) GetDiscoveryStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DiscoveryStatus
}

// GetDiscoveryStatusOk returns a tuple with the DiscoveryStatus field value
// and a boolean to check if the value has been set.
func (o *Domain) GetDiscoveryStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DiscoveryStatus, true
}

// SetDiscoveryStatus sets field value
func (o *Domain) SetDiscoveryStatus(v string) {
	o.DiscoveryStatus = v
}

// GetDomainSummary returns the DomainSummary field value
func (o *Domain) GetDomainSummary() DomainSummary {
	if o == nil {
		var ret DomainSummary
		return ret
	}

	return o.DomainSummary
}

// GetDomainSummaryOk returns a tuple with the DomainSummary field value
// and a boolean to check if the value has been set.
func (o *Domain) GetDomainSummaryOk() (*DomainSummary, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DomainSummary, true
}

// SetDomainSummary sets field value
func (o *Domain) SetDomainSummary(v DomainSummary) {
	o.DomainSummary = v
}

// GetEnabled returns the Enabled field value
func (o *Domain) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *Domain) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *Domain) SetEnabled(v bool) {
	o.Enabled = v
}

// GetFirstParty returns the FirstParty field value
func (o *Domain) GetFirstParty() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.FirstParty
}

// GetFirstPartyOk returns a tuple with the FirstParty field value
// and a boolean to check if the value has been set.
func (o *Domain) GetFirstPartyOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FirstParty, true
}

// SetFirstParty sets field value
func (o *Domain) SetFirstParty(v bool) {
	o.FirstParty = v
}

// GetId returns the Id field value
func (o *Domain) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Domain) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Domain) SetId(v string) {
	o.Id = v
}

// GetIsHealthy returns the IsHealthy field value
func (o *Domain) GetIsHealthy() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsHealthy
}

// GetIsHealthyOk returns a tuple with the IsHealthy field value
// and a boolean to check if the value has been set.
func (o *Domain) GetIsHealthyOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsHealthy, true
}

// SetIsHealthy sets field value
func (o *Domain) SetIsHealthy(v bool) {
	o.IsHealthy = v
}

// GetIsSystemCreated returns the IsSystemCreated field value
func (o *Domain) GetIsSystemCreated() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsSystemCreated
}

// GetIsSystemCreatedOk returns a tuple with the IsSystemCreated field value
// and a boolean to check if the value has been set.
func (o *Domain) GetIsSystemCreatedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsSystemCreated, true
}

// SetIsSystemCreated sets field value
func (o *Domain) SetIsSystemCreated(v bool) {
	o.IsSystemCreated = v
}

// GetLastScannedAt returns the LastScannedAt field value
func (o *Domain) GetLastScannedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastScannedAt
}

// GetLastScannedAtOk returns a tuple with the LastScannedAt field value
// and a boolean to check if the value has been set.
func (o *Domain) GetLastScannedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastScannedAt, true
}

// SetLastScannedAt sets field value
func (o *Domain) SetLastScannedAt(v string) {
	o.LastScannedAt = v
}

// GetName returns the Name field value
func (o *Domain) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Domain) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Domain) SetName(v string) {
	o.Name = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *Domain) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *Domain) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *Domain) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

func (o Domain) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Domain) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["discovered_host_count"] = o.DiscoveredHostCount
	toSerialize["discovery_status"] = o.DiscoveryStatus
	toSerialize["domain_summary"] = o.DomainSummary
	toSerialize["enabled"] = o.Enabled
	toSerialize["first_party"] = o.FirstParty
	toSerialize["id"] = o.Id
	toSerialize["is_healthy"] = o.IsHealthy
	toSerialize["is_system_created"] = o.IsSystemCreated
	toSerialize["last_scanned_at"] = o.LastScannedAt
	toSerialize["name"] = o.Name
	toSerialize["updated_at"] = o.UpdatedAt
	return toSerialize, nil
}

func (o *Domain) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"created_at",
		"discovered_host_count",
		"discovery_status",
		"domain_summary",
		"enabled",
		"first_party",
		"id",
		"is_healthy",
		"is_system_created",
		"last_scanned_at",
		"name",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDomain := _Domain{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDomain)

	if err != nil {
		return err
	}

	*o = Domain(varDomain)

	return err
}

type NullableDomain struct {
	value *Domain
	isSet bool
}

func (v NullableDomain) Get() *Domain {
	return v.value
}

func (v *NullableDomain) Set(val *Domain) {
	v.value = val
	v.isSet = true
}

func (v NullableDomain) IsSet() bool {
	return v.isSet
}

func (v *NullableDomain) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDomain(val *Domain) *NullableDomain {
	return &NullableDomain{value: val, isSet: true}
}

func (v NullableDomain) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDomain) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


