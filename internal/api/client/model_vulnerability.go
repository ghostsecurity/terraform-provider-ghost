/*
Ghost API

The Ghost API

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the Vulnerability type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Vulnerability{}

// Vulnerability struct for Vulnerability
type Vulnerability struct {
	DemoData *string `json:"demo_data,omitempty"`
	FirstDetectedAt *string `json:"first_detected_at,omitempty"`
	Id string `json:"id"`
	Issue Issue `json:"issue"`
	LastDetectedAt *string `json:"last_detected_at,omitempty"`
	Resource VulnerableResource `json:"resource"`
	Status string `json:"status"`
	SuppressedUntil *string `json:"suppressed_until,omitempty"`
	UnresolvedAt *string `json:"unresolved_at,omitempty"`
}

type _Vulnerability Vulnerability

// NewVulnerability instantiates a new Vulnerability object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVulnerability(id string, issue Issue, resource VulnerableResource, status string) *Vulnerability {
	this := Vulnerability{}
	this.Id = id
	this.Issue = issue
	this.Resource = resource
	this.Status = status
	return &this
}

// NewVulnerabilityWithDefaults instantiates a new Vulnerability object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVulnerabilityWithDefaults() *Vulnerability {
	this := Vulnerability{}
	return &this
}

// GetDemoData returns the DemoData field value if set, zero value otherwise.
func (o *Vulnerability) GetDemoData() string {
	if o == nil || IsNil(o.DemoData) {
		var ret string
		return ret
	}
	return *o.DemoData
}

// GetDemoDataOk returns a tuple with the DemoData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vulnerability) GetDemoDataOk() (*string, bool) {
	if o == nil || IsNil(o.DemoData) {
		return nil, false
	}
	return o.DemoData, true
}

// HasDemoData returns a boolean if a field has been set.
func (o *Vulnerability) HasDemoData() bool {
	if o != nil && !IsNil(o.DemoData) {
		return true
	}

	return false
}

// SetDemoData gets a reference to the given string and assigns it to the DemoData field.
func (o *Vulnerability) SetDemoData(v string) {
	o.DemoData = &v
}

// GetFirstDetectedAt returns the FirstDetectedAt field value if set, zero value otherwise.
func (o *Vulnerability) GetFirstDetectedAt() string {
	if o == nil || IsNil(o.FirstDetectedAt) {
		var ret string
		return ret
	}
	return *o.FirstDetectedAt
}

// GetFirstDetectedAtOk returns a tuple with the FirstDetectedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vulnerability) GetFirstDetectedAtOk() (*string, bool) {
	if o == nil || IsNil(o.FirstDetectedAt) {
		return nil, false
	}
	return o.FirstDetectedAt, true
}

// HasFirstDetectedAt returns a boolean if a field has been set.
func (o *Vulnerability) HasFirstDetectedAt() bool {
	if o != nil && !IsNil(o.FirstDetectedAt) {
		return true
	}

	return false
}

// SetFirstDetectedAt gets a reference to the given string and assigns it to the FirstDetectedAt field.
func (o *Vulnerability) SetFirstDetectedAt(v string) {
	o.FirstDetectedAt = &v
}

// GetId returns the Id field value
func (o *Vulnerability) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Vulnerability) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Vulnerability) SetId(v string) {
	o.Id = v
}

// GetIssue returns the Issue field value
func (o *Vulnerability) GetIssue() Issue {
	if o == nil {
		var ret Issue
		return ret
	}

	return o.Issue
}

// GetIssueOk returns a tuple with the Issue field value
// and a boolean to check if the value has been set.
func (o *Vulnerability) GetIssueOk() (*Issue, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Issue, true
}

// SetIssue sets field value
func (o *Vulnerability) SetIssue(v Issue) {
	o.Issue = v
}

// GetLastDetectedAt returns the LastDetectedAt field value if set, zero value otherwise.
func (o *Vulnerability) GetLastDetectedAt() string {
	if o == nil || IsNil(o.LastDetectedAt) {
		var ret string
		return ret
	}
	return *o.LastDetectedAt
}

// GetLastDetectedAtOk returns a tuple with the LastDetectedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vulnerability) GetLastDetectedAtOk() (*string, bool) {
	if o == nil || IsNil(o.LastDetectedAt) {
		return nil, false
	}
	return o.LastDetectedAt, true
}

// HasLastDetectedAt returns a boolean if a field has been set.
func (o *Vulnerability) HasLastDetectedAt() bool {
	if o != nil && !IsNil(o.LastDetectedAt) {
		return true
	}

	return false
}

// SetLastDetectedAt gets a reference to the given string and assigns it to the LastDetectedAt field.
func (o *Vulnerability) SetLastDetectedAt(v string) {
	o.LastDetectedAt = &v
}

// GetResource returns the Resource field value
func (o *Vulnerability) GetResource() VulnerableResource {
	if o == nil {
		var ret VulnerableResource
		return ret
	}

	return o.Resource
}

// GetResourceOk returns a tuple with the Resource field value
// and a boolean to check if the value has been set.
func (o *Vulnerability) GetResourceOk() (*VulnerableResource, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Resource, true
}

// SetResource sets field value
func (o *Vulnerability) SetResource(v VulnerableResource) {
	o.Resource = v
}

// GetStatus returns the Status field value
func (o *Vulnerability) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *Vulnerability) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *Vulnerability) SetStatus(v string) {
	o.Status = v
}

// GetSuppressedUntil returns the SuppressedUntil field value if set, zero value otherwise.
func (o *Vulnerability) GetSuppressedUntil() string {
	if o == nil || IsNil(o.SuppressedUntil) {
		var ret string
		return ret
	}
	return *o.SuppressedUntil
}

// GetSuppressedUntilOk returns a tuple with the SuppressedUntil field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vulnerability) GetSuppressedUntilOk() (*string, bool) {
	if o == nil || IsNil(o.SuppressedUntil) {
		return nil, false
	}
	return o.SuppressedUntil, true
}

// HasSuppressedUntil returns a boolean if a field has been set.
func (o *Vulnerability) HasSuppressedUntil() bool {
	if o != nil && !IsNil(o.SuppressedUntil) {
		return true
	}

	return false
}

// SetSuppressedUntil gets a reference to the given string and assigns it to the SuppressedUntil field.
func (o *Vulnerability) SetSuppressedUntil(v string) {
	o.SuppressedUntil = &v
}

// GetUnresolvedAt returns the UnresolvedAt field value if set, zero value otherwise.
func (o *Vulnerability) GetUnresolvedAt() string {
	if o == nil || IsNil(o.UnresolvedAt) {
		var ret string
		return ret
	}
	return *o.UnresolvedAt
}

// GetUnresolvedAtOk returns a tuple with the UnresolvedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Vulnerability) GetUnresolvedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UnresolvedAt) {
		return nil, false
	}
	return o.UnresolvedAt, true
}

// HasUnresolvedAt returns a boolean if a field has been set.
func (o *Vulnerability) HasUnresolvedAt() bool {
	if o != nil && !IsNil(o.UnresolvedAt) {
		return true
	}

	return false
}

// SetUnresolvedAt gets a reference to the given string and assigns it to the UnresolvedAt field.
func (o *Vulnerability) SetUnresolvedAt(v string) {
	o.UnresolvedAt = &v
}

func (o Vulnerability) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Vulnerability) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DemoData) {
		toSerialize["demo_data"] = o.DemoData
	}
	if !IsNil(o.FirstDetectedAt) {
		toSerialize["first_detected_at"] = o.FirstDetectedAt
	}
	toSerialize["id"] = o.Id
	toSerialize["issue"] = o.Issue
	if !IsNil(o.LastDetectedAt) {
		toSerialize["last_detected_at"] = o.LastDetectedAt
	}
	toSerialize["resource"] = o.Resource
	toSerialize["status"] = o.Status
	if !IsNil(o.SuppressedUntil) {
		toSerialize["suppressed_until"] = o.SuppressedUntil
	}
	if !IsNil(o.UnresolvedAt) {
		toSerialize["unresolved_at"] = o.UnresolvedAt
	}
	return toSerialize, nil
}

func (o *Vulnerability) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"issue",
		"resource",
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVulnerability := _Vulnerability{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVulnerability)

	if err != nil {
		return err
	}

	*o = Vulnerability(varVulnerability)

	return err
}

type NullableVulnerability struct {
	value *Vulnerability
	isSet bool
}

func (v NullableVulnerability) Get() *Vulnerability {
	return v.value
}

func (v *NullableVulnerability) Set(val *Vulnerability) {
	v.value = val
	v.isSet = true
}

func (v NullableVulnerability) IsSet() bool {
	return v.isSet
}

func (v *NullableVulnerability) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVulnerability(val *Vulnerability) *NullableVulnerability {
	return &NullableVulnerability{value: val, isSet: true}
}

func (v NullableVulnerability) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVulnerability) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


