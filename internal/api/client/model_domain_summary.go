/*
Ghost API

The Ghost API

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DomainSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DomainSummary{}

// DomainSummary struct for DomainSummary
type DomainSummary struct {
	AppCount int32 `json:"app_count"`
	EndpointCount int32 `json:"endpoint_count"`
	HostCount int32 `json:"host_count"`
}

type _DomainSummary DomainSummary

// NewDomainSummary instantiates a new DomainSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDomainSummary(appCount int32, endpointCount int32, hostCount int32) *DomainSummary {
	this := DomainSummary{}
	this.AppCount = appCount
	this.EndpointCount = endpointCount
	this.HostCount = hostCount
	return &this
}

// NewDomainSummaryWithDefaults instantiates a new DomainSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDomainSummaryWithDefaults() *DomainSummary {
	this := DomainSummary{}
	return &this
}

// GetAppCount returns the AppCount field value
func (o *DomainSummary) GetAppCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AppCount
}

// GetAppCountOk returns a tuple with the AppCount field value
// and a boolean to check if the value has been set.
func (o *DomainSummary) GetAppCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AppCount, true
}

// SetAppCount sets field value
func (o *DomainSummary) SetAppCount(v int32) {
	o.AppCount = v
}

// GetEndpointCount returns the EndpointCount field value
func (o *DomainSummary) GetEndpointCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.EndpointCount
}

// GetEndpointCountOk returns a tuple with the EndpointCount field value
// and a boolean to check if the value has been set.
func (o *DomainSummary) GetEndpointCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndpointCount, true
}

// SetEndpointCount sets field value
func (o *DomainSummary) SetEndpointCount(v int32) {
	o.EndpointCount = v
}

// GetHostCount returns the HostCount field value
func (o *DomainSummary) GetHostCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.HostCount
}

// GetHostCountOk returns a tuple with the HostCount field value
// and a boolean to check if the value has been set.
func (o *DomainSummary) GetHostCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HostCount, true
}

// SetHostCount sets field value
func (o *DomainSummary) SetHostCount(v int32) {
	o.HostCount = v
}

func (o DomainSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DomainSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["app_count"] = o.AppCount
	toSerialize["endpoint_count"] = o.EndpointCount
	toSerialize["host_count"] = o.HostCount
	return toSerialize, nil
}

func (o *DomainSummary) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"app_count",
		"endpoint_count",
		"host_count",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDomainSummary := _DomainSummary{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDomainSummary)

	if err != nil {
		return err
	}

	*o = DomainSummary(varDomainSummary)

	return err
}

type NullableDomainSummary struct {
	value *DomainSummary
	isSet bool
}

func (v NullableDomainSummary) Get() *DomainSummary {
	return v.value
}

func (v *NullableDomainSummary) Set(val *DomainSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableDomainSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableDomainSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDomainSummary(val *DomainSummary) *NullableDomainSummary {
	return &NullableDomainSummary{value: val, isSet: true}
}

func (v NullableDomainSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDomainSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


