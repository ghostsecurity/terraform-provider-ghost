/*
Ghost API

The Ghost API

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the Asset type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Asset{}

// Asset struct for Asset
type Asset struct {
	CreatedAt string `json:"created_at"`
	Host Host `json:"host"`
	Id string `json:"id"`
	IsFirstParty bool `json:"is_first_party"`
	Kind string `json:"kind"`
	LastSeenAt string `json:"last_seen_at"`
	Path string `json:"path"`
}

type _Asset Asset

// NewAsset instantiates a new Asset object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAsset(createdAt string, host Host, id string, isFirstParty bool, kind string, lastSeenAt string, path string) *Asset {
	this := Asset{}
	this.CreatedAt = createdAt
	this.Host = host
	this.Id = id
	this.IsFirstParty = isFirstParty
	this.Kind = kind
	this.LastSeenAt = lastSeenAt
	this.Path = path
	return &this
}

// NewAssetWithDefaults instantiates a new Asset object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssetWithDefaults() *Asset {
	this := Asset{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *Asset) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Asset) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Asset) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetHost returns the Host field value
func (o *Asset) GetHost() Host {
	if o == nil {
		var ret Host
		return ret
	}

	return o.Host
}

// GetHostOk returns a tuple with the Host field value
// and a boolean to check if the value has been set.
func (o *Asset) GetHostOk() (*Host, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Host, true
}

// SetHost sets field value
func (o *Asset) SetHost(v Host) {
	o.Host = v
}

// GetId returns the Id field value
func (o *Asset) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Asset) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Asset) SetId(v string) {
	o.Id = v
}

// GetIsFirstParty returns the IsFirstParty field value
func (o *Asset) GetIsFirstParty() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsFirstParty
}

// GetIsFirstPartyOk returns a tuple with the IsFirstParty field value
// and a boolean to check if the value has been set.
func (o *Asset) GetIsFirstPartyOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsFirstParty, true
}

// SetIsFirstParty sets field value
func (o *Asset) SetIsFirstParty(v bool) {
	o.IsFirstParty = v
}

// GetKind returns the Kind field value
func (o *Asset) GetKind() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Kind
}

// GetKindOk returns a tuple with the Kind field value
// and a boolean to check if the value has been set.
func (o *Asset) GetKindOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Kind, true
}

// SetKind sets field value
func (o *Asset) SetKind(v string) {
	o.Kind = v
}

// GetLastSeenAt returns the LastSeenAt field value
func (o *Asset) GetLastSeenAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastSeenAt
}

// GetLastSeenAtOk returns a tuple with the LastSeenAt field value
// and a boolean to check if the value has been set.
func (o *Asset) GetLastSeenAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastSeenAt, true
}

// SetLastSeenAt sets field value
func (o *Asset) SetLastSeenAt(v string) {
	o.LastSeenAt = v
}

// GetPath returns the Path field value
func (o *Asset) GetPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Path
}

// GetPathOk returns a tuple with the Path field value
// and a boolean to check if the value has been set.
func (o *Asset) GetPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Path, true
}

// SetPath sets field value
func (o *Asset) SetPath(v string) {
	o.Path = v
}

func (o Asset) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Asset) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["host"] = o.Host
	toSerialize["id"] = o.Id
	toSerialize["is_first_party"] = o.IsFirstParty
	toSerialize["kind"] = o.Kind
	toSerialize["last_seen_at"] = o.LastSeenAt
	toSerialize["path"] = o.Path
	return toSerialize, nil
}

func (o *Asset) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"created_at",
		"host",
		"id",
		"is_first_party",
		"kind",
		"last_seen_at",
		"path",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAsset := _Asset{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAsset)

	if err != nil {
		return err
	}

	*o = Asset(varAsset)

	return err
}

type NullableAsset struct {
	value *Asset
	isSet bool
}

func (v NullableAsset) Get() *Asset {
	return v.value
}

func (v *NullableAsset) Set(val *Asset) {
	v.value = val
	v.isSet = true
}

func (v NullableAsset) IsSet() bool {
	return v.isSet
}

func (v *NullableAsset) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAsset(val *Asset) *NullableAsset {
	return &NullableAsset{value: val, isSet: true}
}

func (v NullableAsset) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAsset) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


