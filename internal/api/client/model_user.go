/*
Ghost API

The Ghost API

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the User type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &User{}

// User struct for User
type User struct {
	CreatedAt string `json:"created_at"`
	Email string `json:"email"`
	Enabled bool `json:"enabled"`
	Id string `json:"id"`
	LastLogin string `json:"last_login"`
	Name string `json:"name"`
	OrganizationId string `json:"organization_id"`
	OrganizationRole string `json:"organization_role"`
	PlatformRole string `json:"platform_role"`
	UpdatedAt string `json:"updated_at"`
}

type _User User

// NewUser instantiates a new User object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUser(createdAt string, email string, enabled bool, id string, lastLogin string, name string, organizationId string, organizationRole string, platformRole string, updatedAt string) *User {
	this := User{}
	this.CreatedAt = createdAt
	this.Email = email
	this.Enabled = enabled
	this.Id = id
	this.LastLogin = lastLogin
	this.Name = name
	this.OrganizationId = organizationId
	this.OrganizationRole = organizationRole
	this.PlatformRole = platformRole
	this.UpdatedAt = updatedAt
	return &this
}

// NewUserWithDefaults instantiates a new User object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserWithDefaults() *User {
	this := User{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *User) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *User) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *User) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetEmail returns the Email field value
func (o *User) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *User) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *User) SetEmail(v string) {
	o.Email = v
}

// GetEnabled returns the Enabled field value
func (o *User) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *User) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *User) SetEnabled(v bool) {
	o.Enabled = v
}

// GetId returns the Id field value
func (o *User) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *User) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *User) SetId(v string) {
	o.Id = v
}

// GetLastLogin returns the LastLogin field value
func (o *User) GetLastLogin() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastLogin
}

// GetLastLoginOk returns a tuple with the LastLogin field value
// and a boolean to check if the value has been set.
func (o *User) GetLastLoginOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastLogin, true
}

// SetLastLogin sets field value
func (o *User) SetLastLogin(v string) {
	o.LastLogin = v
}

// GetName returns the Name field value
func (o *User) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *User) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *User) SetName(v string) {
	o.Name = v
}

// GetOrganizationId returns the OrganizationId field value
func (o *User) GetOrganizationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value
// and a boolean to check if the value has been set.
func (o *User) GetOrganizationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrganizationId, true
}

// SetOrganizationId sets field value
func (o *User) SetOrganizationId(v string) {
	o.OrganizationId = v
}

// GetOrganizationRole returns the OrganizationRole field value
func (o *User) GetOrganizationRole() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrganizationRole
}

// GetOrganizationRoleOk returns a tuple with the OrganizationRole field value
// and a boolean to check if the value has been set.
func (o *User) GetOrganizationRoleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrganizationRole, true
}

// SetOrganizationRole sets field value
func (o *User) SetOrganizationRole(v string) {
	o.OrganizationRole = v
}

// GetPlatformRole returns the PlatformRole field value
func (o *User) GetPlatformRole() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PlatformRole
}

// GetPlatformRoleOk returns a tuple with the PlatformRole field value
// and a boolean to check if the value has been set.
func (o *User) GetPlatformRoleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PlatformRole, true
}

// SetPlatformRole sets field value
func (o *User) SetPlatformRole(v string) {
	o.PlatformRole = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *User) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *User) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *User) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

func (o User) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o User) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["email"] = o.Email
	toSerialize["enabled"] = o.Enabled
	toSerialize["id"] = o.Id
	toSerialize["last_login"] = o.LastLogin
	toSerialize["name"] = o.Name
	toSerialize["organization_id"] = o.OrganizationId
	toSerialize["organization_role"] = o.OrganizationRole
	toSerialize["platform_role"] = o.PlatformRole
	toSerialize["updated_at"] = o.UpdatedAt
	return toSerialize, nil
}

func (o *User) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"created_at",
		"email",
		"enabled",
		"id",
		"last_login",
		"name",
		"organization_id",
		"organization_role",
		"platform_role",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUser := _User{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUser)

	if err != nil {
		return err
	}

	*o = User(varUser)

	return err
}

type NullableUser struct {
	value *User
	isSet bool
}

func (v NullableUser) Get() *User {
	return v.value
}

func (v *NullableUser) Set(val *User) {
	v.value = val
	v.isSet = true
}

func (v NullableUser) IsSet() bool {
	return v.isSet
}

func (v *NullableUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUser(val *User) *NullableUser {
	return &NullableUser{value: val, isSet: true}
}

func (v NullableUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


